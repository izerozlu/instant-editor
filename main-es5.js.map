{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/instant-editor/instant-editor.component.html","webpack:///src/app/components/instant-editor/instant-editor.component.ts","webpack:///src/app/constants/class-names.constant.ts","webpack:///src/app/constants/http-paths.constant.ts","webpack:///src/app/models/script-analysis.ts","webpack:///src/app/services/script-analyzer-http.service.ts","webpack:///src/app/services/subscription-handler.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","InstantEditorComponent","elementRef","scriptAnalysisHttpService","subscriptionHandlerService","domSanitizer","instantEditorComponentClass","extractComponentNativeElements","listenEditorInput","listenEditorScroll","listenEditorResize","clearSubscriptions","editorResizeObserver","disconnect","editorElement","offsetHeight","offsetWidth","editorBackgroundElement","style","height","width","hostElement","observe","subscription","subscribe","scrollLeft","scrollTop","scrollTo","addSubscription","pipe","processAndSyncScript","value","Boolean","processing","saveCaretPosition","script","hasTrailingSpace","slice","postScriptAnalysis","toPromise","analysisResult","phrase","scriptAnalysis","loadCaretPosition","nativeElement","editorElementRef","editorBackgroundElementRef","constructedScript","blackListed","BLACKLIST","grayListed","GRAYLIST","undefinedList","UNDEFINED","forEach","list","className","processPhrase","editorString","sanitize","HTML","grayListedCount","reduce","processedString","listItem","replacementRegExp","RegExp","replace","match","replacement","caretPosition","selectionStart","selectionEnd","CLASS_NAMES","HTTP_PATHS","SCRIPT_ANALYSIS","ScriptAnalysis","_phrase","_grayListed","_blackListed","_undefinedList","ScriptAnalyzerHttpService","httpClient","post","error","response","generateEmpty","undefined","providedIn","SubscriptionHandlerService","subscriptionList","push","unsubscribe","environment","production","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n","<instant-editor></instant-editor>\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { InstantEditorComponent } from './components/instant-editor/instant-editor.component';\n\n@NgModule({\n\tdeclarations: [AppComponent, InstantEditorComponent],\n\timports: [BrowserModule, ReactiveFormsModule, HttpClientModule],\n\tproviders: [],\n\tbootstrap: [AppComponent],\n})\nexport class AppModule {}\n","<!-- .editor-background holds the process html from the .editor's value. -->\n<div\n\tclass=\"instant-editor-component__editor-background editor-background\"\n\t#editorBackground\n\tcontenteditable\n\tautocapitalize=\"off\"\n\tspellcheck=\"false\"\n\t[innerHTML]=\"editorString\"\n></div>\n<!--\n .editor is the where user writes its content into. But writing from the .editor is hidden by setting\n the color to transparent. This way user actually uses a textarea but views the processed result from the\n .editor-background.\n -->\n<textarea\n\tclass=\"instant-editor-component__editor editor\"\n\t#editor\n\tautocomplete=\"off\"\n\tautocapitalize=\"off\"\n\tspellcheck=\"false\"\n></textarea>\n<small class=\"instant-editor-component__processing-label\" *ngIf=\"processing\">Processing..</small>\n","import {\n\tAfterViewInit,\n\tComponent,\n\tElementRef,\n\tHostBinding,\n\tOnDestroy,\n\tSecurityContext,\n\tViewChild,\n} from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { ScriptAnalyzerHttpService } from '../../services/script-analyzer-http.service';\nimport { debounceTime, filter, tap } from 'rxjs/operators';\nimport { ScriptAnalysis } from '../../models/script-analysis';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { CLASS_NAMES } from '../../constants/class-names.constant';\nimport { SubscriptionHandlerService } from '../../services/subscription-handler.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n\tselector: 'instant-editor',\n\ttemplateUrl: './instant-editor.component.html',\n\tstyleUrls: ['./instant-editor.component.scss'],\n})\nexport class InstantEditorComponent implements AfterViewInit, OnDestroy {\n\t@HostBinding('class.instant-editor')\n\tprivate instantEditorComponentClass = true;\n\n\t@ViewChild('editor')\n\tprivate editorElementRef: ElementRef;\n\n\t@ViewChild('editorBackground')\n\tprivate editorBackgroundElementRef: ElementRef;\n\n\tprivate scriptAnalysis: ScriptAnalysis;\n\tprivate caretPosition: number;\n\tprivate hostElement: HTMLElement;\n\tprivate editorElement: HTMLTextAreaElement;\n\tprivate editorBackgroundElement: HTMLDivElement;\n\tprivate editorResizeObserver: ResizeObserver;\n\tprivate hasTrailingSpace: boolean;\n\n\tpublic editorString: string;\n\tpublic processing: boolean;\n\n\tconstructor(\n\t\tprivate elementRef: ElementRef,\n\t\tprivate scriptAnalysisHttpService: ScriptAnalyzerHttpService,\n\t\tprivate subscriptionHandlerService: SubscriptionHandlerService,\n\t\tprivate domSanitizer: DomSanitizer\n\t) {}\n\n\tngAfterViewInit(): void {\n\t\tthis.extractComponentNativeElements();\n\t\tthis.listenEditorInput();\n\t\tthis.listenEditorScroll();\n\t\tthis.listenEditorResize();\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.subscriptionHandlerService.clearSubscriptions();\n\t\tthis.editorResizeObserver.disconnect();\n\t}\n\n\t/**\n\t * Listens editor element's resize event to synchronize editor element's dimensions with editorBackgroundElement and hostElement.\n\t */\n\tprivate listenEditorResize(): void {\n\t\tthis.editorResizeObserver = new ResizeObserver(() => {\n\t\t\tconst { offsetHeight, offsetWidth } = this.editorElement;\n\t\t\tthis.editorBackgroundElement.style.height = `${offsetHeight}px`;\n\t\t\tthis.editorBackgroundElement.style.width = `${offsetWidth}px`;\n\t\t\tthis.hostElement.style.height = `${offsetHeight}px`;\n\t\t\tthis.hostElement.style.width = `${offsetWidth}px`;\n\t\t});\n\t\tthis.editorResizeObserver.observe(this.editorElement);\n\t}\n\n\t/**\n\t * Listens editor's scroll event to synchronize editorBackgroundElement's scroll with the editor's scroll.\n\t */\n\tprivate listenEditorScroll(): void {\n\t\tconst subscription = fromEvent(this.editorElement, 'scroll').subscribe(() => {\n\t\t\tconst { scrollLeft, scrollTop } = this.editorElement;\n\t\t\tthis.editorBackgroundElement.scrollTo(scrollLeft, scrollTop);\n\t\t});\n\t\tthis.subscriptionHandlerService.addSubscription(subscription);\n\t}\n\n\t/**\n\t * Listens editor's input event to process its value. The listening process has two goals.\n\t * <br>\n\t * First one is synchronizing the editorBackground's content with the editor's content.\n\t * <br>\n\t * Second is to retrieve the ScriptAnalysis result of the editor's content.\n\t * <br>\n\t * As a side effect, saves and loads the caret position to not disturb the user's writing\n\t * experience.\n\t */\n\tprivate listenEditorInput(): void {\n\t\tconst subscription = fromEvent(this.editorElement, 'input')\n\t\t\t.pipe(\n\t\t\t\ttap(() => this.processAndSyncScript(this.editorElement.value)),\n\t\t\t\tdebounceTime(500),\n\t\t\t\tfilter(() => Boolean(this.editorElement.value))\n\t\t\t)\n\t\t\t.subscribe(async () => {\n\t\t\t\tthis.processing = true;\n\t\t\t\tthis.saveCaretPosition();\n\t\t\t\tconst script = this.editorElement.value;\n\t\t\t\tthis.hasTrailingSpace = this.editorElement.value.slice(-1)[0] === ' ';\n\t\t\t\tconst analysisResult: ScriptAnalysis = await this.scriptAnalysisHttpService\n\t\t\t\t\t.postScriptAnalysis(script)\n\t\t\t\t\t.toPromise();\n\t\t\t\tthis.processing = false;\n\t\t\t\tif (analysisResult.phrase !== '') {\n\t\t\t\t\tif (this.hasTrailingSpace) {\n\t\t\t\t\t\tanalysisResult.phrase += ' ';\n\t\t\t\t\t}\n\t\t\t\t\tthis.scriptAnalysis = analysisResult;\n\t\t\t\t\tthis.processAndSyncScript(this.scriptAnalysis.phrase);\n\t\t\t\t\tthis.editorElement.value = this.scriptAnalysis.phrase;\n\t\t\t\t\tthis.loadCaretPosition();\n\t\t\t\t}\n\t\t\t});\n\t\tthis.subscriptionHandlerService.addSubscription(subscription);\n\t}\n\n\t/**\n\t * Saves three native elements for further usage.\n\t * <br>\n\t * These are: component's host element, editor's element and editorBackground's element.\n\t */\n\tprivate extractComponentNativeElements(): void {\n\t\tthis.hostElement = this.elementRef.nativeElement;\n\t\tthis.editorElement = this.editorElementRef.nativeElement;\n\t\tthis.editorBackgroundElement = this.editorBackgroundElementRef.nativeElement;\n\t}\n\n\t/**\n\t * Processes given constructedScript to mark/unmark graylisted, blacklisted and undefined\n\t * words.\n\t * <br>\n\t * After the processing is complete synchronizes editor's content with the editorBackground's\n\t * content.\n\t * @param constructedScript Script to process through scriptAnalysis.\n\t */\n\tprivate processAndSyncScript(constructedScript: string): void {\n\t\tif (this.scriptAnalysis) {\n\t\t\t[\n\t\t\t\t[this.scriptAnalysis.blackListed, CLASS_NAMES.BLACKLIST],\n\t\t\t\t[this.scriptAnalysis.grayListed, CLASS_NAMES.GRAYLIST],\n\t\t\t\t[this.scriptAnalysis.undefinedList, CLASS_NAMES.UNDEFINED],\n\t\t\t].forEach(([list, className]: [string[], string]) => {\n\t\t\t\tconstructedScript = this.processPhrase(list, constructedScript, className);\n\t\t\t});\n\t\t}\n\t\t// DomSanitizer service of the Angular Frameworks helps with the sanitization of strings again XSS attacks.\n\t\tthis.editorString = this.domSanitizer.sanitize(SecurityContext.HTML, constructedScript);\n\t}\n\n\t/**\n\t * Decides where to process and after that constructs graylisted, blacklisted and undefined parts' html strings.\n\t * <br>\n\t * Decision making mechanism relies on RegExp tests and given className variable.\n\t * <br>\n\t * Construction part is mostly same for three different classes. But graylisted html parts require an extra\n\t * segment.\n\t * @param list List of items to mark. List's type might be blacklisted, graylisted or undefined.\n\t * @param script String to build upon or replace on.\n\t * @param className CSS class name to assign to constructed html part.\n\t * @returns Processed and constructed html string.\n\t */\n\tprivate processPhrase(list: string[], script: string, className: string): string {\n\t\tlet grayListedCount = 0;\n\t\treturn list.reduce((processedString: string, listItem: string) => {\n\t\t\tconst replacementRegExp = new RegExp(listItem, 'gi');\n\t\t\treturn processedString.replace(replacementRegExp, (match: string) => {\n\t\t\t\tlet replacement = `<span class=\"${className}\">${match}`;\n\t\t\t\tif (className === CLASS_NAMES.GRAYLIST) {\n\t\t\t\t\treplacement += `<sub class=\"editor__count-marker\">${++grayListedCount}</sub>`;\n\t\t\t\t}\n\t\t\t\treturn replacement + '</span>';\n\t\t\t});\n\t\t}, script);\n\t}\n\n\t/**\n\t * Saves the editorElement's caret position.\n\t */\n\tprivate saveCaretPosition(): void {\n\t\tthis.caretPosition = this.editorElement.selectionStart;\n\t}\n\n\t/**\n\t * Loads the editorElement's caret position.\n\t */\n\tprivate loadCaretPosition(): void {\n\t\tthis.editorElement.selectionStart = this.caretPosition;\n\t\tthis.editorElement.selectionEnd = this.caretPosition;\n\t}\n}\n","export const CLASS_NAMES = {\n\tUNDEFINED: 'editor__undefined',\n\tBLACKLIST: 'editor__blacklisted',\n\tGRAYLIST: 'editor__graylisted',\n};\n","export const HTTP_PATHS = {\n\tSCRIPT_ANALYSIS: \"https://api.sikayetvar.com/dictionary/phrase/check\",\n};\n","export interface RawScriptAnalysis {\n\tphrase: string;\n\tgrayListed: string[];\n\tblackListed: string[];\n\tundefined: string[];\n}\n\nexport class ScriptAnalysis {\n\tprivate _phrase: string;\n\tprivate _grayListed: string[];\n\tprivate _blackListed: string[];\n\tprivate _undefinedList: string[];\n\n\tconstructor({\n\t\tphrase,\n\t\tgrayListed,\n\t\tblackListed,\n\t\tundefinedList,\n\t}: {\n\t\tphrase: string;\n\t\tgrayListed: string[];\n\t\tblackListed: string[];\n\t\tundefinedList: string[];\n\t}) {\n\t\tthis._phrase = phrase;\n\t\tthis._grayListed = grayListed;\n\t\tthis._blackListed = blackListed;\n\t\tthis._undefinedList = undefinedList;\n\t}\n\n\tstatic generateEmpty(): ScriptAnalysis {\n\t\treturn new ScriptAnalysis({ phrase: '', undefinedList: [], grayListed: [], blackListed: [] });\n\t}\n\n\tget phrase(): string {\n\t\treturn this._phrase;\n\t}\n\n\tset phrase(value: string) {\n\t\tthis._phrase = value;\n\t}\n\n\tget grayListed(): string[] {\n\t\treturn this._grayListed;\n\t}\n\n\tset grayListed(value: string[]) {\n\t\tthis._grayListed = value;\n\t}\n\n\tget blackListed(): string[] {\n\t\treturn this._blackListed;\n\t}\n\n\tset blackListed(value: string[]) {\n\t\tthis._blackListed = value;\n\t}\n\n\tget undefinedList(): string[] {\n\t\treturn this._undefinedList;\n\t}\n\n\tset undefinedList(value: string[]) {\n\t\tthis._undefinedList = value;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { HTTP_PATHS } from '../constants/http-paths.constant';\nimport { Observable, of } from 'rxjs';\nimport { RawScriptAnalysis, ScriptAnalysis } from '../models/script-analysis';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class ScriptAnalyzerHttpService {\n\tconstructor(private httpClient: HttpClient) {}\n\n\tpublic postScriptAnalysis(script: string): Observable<ScriptAnalysis> {\n\t\treturn this.httpClient.post<RawScriptAnalysis>(HTTP_PATHS.SCRIPT_ANALYSIS, script).pipe(\n\t\t\tcatchError((error: HttpErrorResponse) => {\n\t\t\t\treturn of(error);\n\t\t\t}),\n\t\t\tmap((response: RawScriptAnalysis | HttpErrorResponse) => {\n\t\t\t\tif (response instanceof HttpErrorResponse) {\n\t\t\t\t\treturn ScriptAnalysis.generateEmpty();\n\t\t\t\t} else {\n\t\t\t\t\treturn new ScriptAnalysis({\n\t\t\t\t\t\t...response,\n\t\t\t\t\t\tundefinedList: response.undefined,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class SubscriptionHandlerService {\n\tprivate subscriptionList: Subscription[] = [];\n\n\tconstructor() {}\n\n\tpublic addSubscription(subscription: Subscription): void {\n\t\tthis.subscriptionList.push(subscription);\n\t}\n\n\tpublic clearSubscriptions(): void {\n\t\tthis.subscriptionList.forEach((subscription: Subscription) => subscription.unsubscribe());\n\t}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n\tproduction: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n\tenableProdMode();\n}\n\nplatformBrowserDynamic()\n\t.bootstrapModule(AppModule)\n\t.catch((err) => console.error(err));\n"]}