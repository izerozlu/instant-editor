{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/instant-editor/instant-editor.component.ts","./src/app/components/instant-editor/instant-editor.component.html","./src/app/constants/class-names.constant.ts","./src/app/constants/http-paths.constant.ts","./src/app/models/script-analysis.ts","./src/app/services/script-analyzer-http.service.ts","./src/app/services/subscription-handler.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n","<instant-editor></instant-editor>\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { InstantEditorComponent } from './components/instant-editor/instant-editor.component';\n\n@NgModule({\n\tdeclarations: [AppComponent, InstantEditorComponent],\n\timports: [BrowserModule, ReactiveFormsModule, HttpClientModule],\n\tproviders: [],\n\tbootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import {\n\tAfterViewInit,\n\tComponent,\n\tElementRef,\n\tHostBinding,\n\tOnDestroy,\n\tSecurityContext,\n\tViewChild,\n} from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { ScriptAnalyzerHttpService } from '../../services/script-analyzer-http.service';\nimport { debounceTime, filter, tap } from 'rxjs/operators';\nimport { ScriptAnalysis } from '../../models/script-analysis';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { CLASS_NAMES } from '../../constants/class-names.constant';\nimport { SubscriptionHandlerService } from '../../services/subscription-handler.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n\tselector: 'instant-editor',\n\ttemplateUrl: './instant-editor.component.html',\n\tstyleUrls: ['./instant-editor.component.scss'],\n})\nexport class InstantEditorComponent implements AfterViewInit, OnDestroy {\n\t@HostBinding('class.instant-editor')\n\tprivate instantEditorComponentClass = true;\n\n\t@ViewChild('editor')\n\tprivate editorElementRef: ElementRef;\n\n\t@ViewChild('editorBackground')\n\tprivate editorBackgroundElementRef: ElementRef;\n\n\tprivate scriptAnalysis: ScriptAnalysis;\n\tprivate caretPosition: number;\n\tprivate hostElement: HTMLElement;\n\tprivate editorElement: HTMLTextAreaElement;\n\tprivate editorBackgroundElement: HTMLDivElement;\n\tprivate editorResizeObserver: ResizeObserver;\n\n\tpublic editorString: string;\n\tpublic processing: boolean;\n\n\tconstructor(\n\t\tprivate elementRef: ElementRef,\n\t\tprivate scriptAnalysisHttpService: ScriptAnalyzerHttpService,\n\t\tprivate subscriptionHandlerService: SubscriptionHandlerService,\n\t\tprivate domSanitizer: DomSanitizer\n\t) {}\n\n\tngAfterViewInit(): void {\n\t\tthis.extractComponentNativeElements();\n\t\tthis.listenEditorInput();\n\t\tthis.listenEditorScroll();\n\t\tthis.listenEditorResize();\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.subscriptionHandlerService.clearSubscriptions();\n\t\tthis.editorResizeObserver.disconnect();\n\t}\n\n\t/**\n\t * Listens editor element's resize event to synchronize editor element's dimensions with editorBackgroundElement and hostElement.\n\t */\n\tprivate listenEditorResize(): void {\n\t\tthis.editorResizeObserver = new ResizeObserver(() => {\n\t\t\tconst { offsetHeight, offsetWidth } = this.editorElement;\n\t\t\tthis.editorBackgroundElement.style.height = `${offsetHeight}px`;\n\t\t\tthis.editorBackgroundElement.style.width = `${offsetWidth}px`;\n\t\t\tthis.hostElement.style.height = `${offsetHeight}px`;\n\t\t\tthis.hostElement.style.width = `${offsetWidth}px`;\n\t\t});\n\t\tthis.editorResizeObserver.observe(this.editorElement);\n\t}\n\n\t/**\n\t * Listens editor's scroll event to synchronize editorBackgroundElement's scroll with the editor's scroll.\n\t */\n\tprivate listenEditorScroll(): void {\n\t\tconst subscription = fromEvent(this.editorElement, 'scroll').subscribe(() => {\n\t\t\tconst { scrollLeft, scrollTop } = this.editorElement;\n\t\t\tthis.editorBackgroundElement.scrollTo(scrollLeft, scrollTop);\n\t\t});\n\t\tthis.subscriptionHandlerService.addSubscription(subscription);\n\t}\n\n\t/**\n\t * Listens editor's input event to process its value. The listening process has two goals.\n\t * <br>\n\t * First one is synchronizing the editorBackground's content with the editor's content.\n\t * <br>\n\t * Second is to retrieve the ScriptAnalysis result of the editor's content.\n\t * <br>\n\t * As a side effect, saves and loads the caret position to not disturb the user's writing\n\t * experience.\n\t */\n\tprivate listenEditorInput(): void {\n\t\tconst subscription = fromEvent(this.editorElement, 'input')\n\t\t\t.pipe(\n\t\t\t\ttap(() => this.processAndSyncScript(this.editorElement.value)),\n\t\t\t\tdebounceTime(500),\n\t\t\t\tfilter(() => Boolean(this.editorElement.value))\n\t\t\t)\n\t\t\t.subscribe(async () => {\n\t\t\t\tthis.processing = true;\n\t\t\t\tthis.saveCaretPosition();\n\t\t\t\tconst script = this.editorElement.value;\n\t\t\t\tconst analysisResult: ScriptAnalysis = await this.scriptAnalysisHttpService\n\t\t\t\t\t.postScriptAnalysis(script)\n\t\t\t\t\t.toPromise();\n\t\t\t\tthis.processing = false;\n\t\t\t\tif (analysisResult.phrase !== '') {\n\t\t\t\t\tthis.scriptAnalysis = analysisResult;\n\t\t\t\t\tthis.processAndSyncScript(this.scriptAnalysis.phrase);\n\t\t\t\t\tthis.editorElement.value = this.scriptAnalysis.phrase;\n\t\t\t\t\tthis.loadCaretPosition();\n\t\t\t\t}\n\t\t\t});\n\t\tthis.subscriptionHandlerService.addSubscription(subscription);\n\t}\n\n\t/**\n\t * Saves three native elements for further usage.\n\t * <br>\n\t * These are: component's host element, editor's element and editorBackground's element.\n\t */\n\tprivate extractComponentNativeElements(): void {\n\t\tthis.hostElement = this.elementRef.nativeElement;\n\t\tthis.editorElement = this.editorElementRef.nativeElement;\n\t\tthis.editorBackgroundElement = this.editorBackgroundElementRef.nativeElement;\n\t}\n\n\t/**\n\t * Processes given constructedScript to mark/unmark graylisted, blacklisted and undefined\n\t * words.\n\t * <br>\n\t * After the processing is complete synchronizes editor's content with the editorBackground's\n\t * content.\n\t * @param constructedScript Script to process through scriptAnalysis.\n\t */\n\tprivate processAndSyncScript(constructedScript: string): void {\n\t\tif (this.scriptAnalysis) {\n\t\t\t[\n\t\t\t\t[this.scriptAnalysis.blackListed, CLASS_NAMES.BLACKLIST],\n\t\t\t\t[this.scriptAnalysis.grayListed, CLASS_NAMES.GRAYLIST],\n\t\t\t\t[this.scriptAnalysis.undefinedList, CLASS_NAMES.UNDEFINED],\n\t\t\t].forEach(([list, className]: [string[], string]) => {\n\t\t\t\tconstructedScript = this.processPhrase(list, constructedScript, className);\n\t\t\t});\n\t\t}\n\t\t// DomSanitizer service of the Angular Frameworks helps with the sanitization of strings again XSS attacks.\n\t\tthis.editorString = this.domSanitizer.sanitize(SecurityContext.HTML, constructedScript);\n\t}\n\n\t/**\n\t * Decides where to process and after that constructs graylisted, blacklisted and undefined parts' html strings.\n\t * <br>\n\t * Decision making mechanism relies on RegExp tests and given className variable.\n\t * <br>\n\t * Construction part is mostly same for three different classes. But graylisted html parts require an extra\n\t * segment.\n\t * @param list List of items to mark. List's type might be blacklisted, graylisted or undefined.\n\t * @param script String to build upon or replace on.\n\t * @param className CSS class name to assign to constructed html part.\n\t * @returns Processed and constructed html string.\n\t */\n\tprivate processPhrase(list: string[], script: string, className: string): string {\n\t\tlet grayListedCount = 0;\n\t\treturn list.reduce((processedString: string, listItem: string) => {\n\t\t\tconst replacementRegExp = new RegExp(listItem, 'gi');\n\t\t\treturn processedString.replace(replacementRegExp, (match: string) => {\n\t\t\t\tlet replacement = `<span class=\"${className}\">${match}`;\n\t\t\t\tif (className === CLASS_NAMES.GRAYLIST) {\n\t\t\t\t\treplacement += `<sub class=\"editor__count-marker\">${++grayListedCount}</sub>`;\n\t\t\t\t}\n\t\t\t\treturn replacement + '</span>';\n\t\t\t});\n\t\t}, script);\n\t}\n\n\t/**\n\t * Saves the editorElement's caret position.\n\t */\n\tprivate saveCaretPosition(): void {\n\t\tthis.caretPosition = this.editorElement.selectionStart;\n\t}\n\n\t/**\n\t * Loads the editorElement's caret position.\n\t */\n\tprivate loadCaretPosition(): void {\n\t\tthis.editorElement.selectionStart = this.caretPosition;\n\t\tthis.editorElement.selectionEnd = this.caretPosition;\n\t}\n}\n","<!-- .editor-background holds the process html from the .editor's value. -->\n<div\n\tclass=\"instant-editor-component__editor-background editor-background\"\n\t#editorBackground\n\tcontenteditable\n\tautocapitalize=\"off\"\n\tspellcheck=\"false\"\n\t[innerHTML]=\"editorString\"\n></div>\n<!--\n .editor is the where user writes its content into. But writing from the .editor is hidden by setting\n the color to transparent. This way user actually uses a textarea but views the processed result from the\n .editor-background.\n -->\n<textarea\n\tclass=\"instant-editor-component__editor editor\"\n\t#editor\n\tautocomplete=\"off\"\n\tautocapitalize=\"off\"\n\tspellcheck=\"false\"\n></textarea>\n<small class=\"instant-editor-component__processing-label\" *ngIf=\"processing\">Processing..</small>\n","export const CLASS_NAMES = {\n\tUNDEFINED: 'editor__undefined',\n\tBLACKLIST: 'editor__blacklisted',\n\tGRAYLIST: 'editor__graylisted',\n};\n","export const HTTP_PATHS = {\n\tSCRIPT_ANALYSIS: \"https://api.sikayetvar.com/dictionary/phrase/check\",\n};\n","export interface RawScriptAnalysis {\n\tphrase: string;\n\tgrayListed: string[];\n\tblackListed: string[];\n\tundefined: string[];\n}\n\nexport class ScriptAnalysis {\n\tprivate _phrase: string;\n\tprivate _grayListed: string[];\n\tprivate _blackListed: string[];\n\tprivate _undefinedList: string[];\n\n\tconstructor({\n\t\tphrase,\n\t\tgrayListed,\n\t\tblackListed,\n\t\tundefinedList,\n\t}: {\n\t\tphrase: string;\n\t\tgrayListed: string[];\n\t\tblackListed: string[];\n\t\tundefinedList: string[];\n\t}) {\n\t\tthis._phrase = phrase;\n\t\tthis._grayListed = grayListed;\n\t\tthis._blackListed = blackListed;\n\t\tthis._undefinedList = undefinedList;\n\t}\n\n\tstatic generateEmpty(): ScriptAnalysis {\n\t\treturn new ScriptAnalysis({ phrase: '', undefinedList: [], grayListed: [], blackListed: [] });\n\t}\n\n\tget phrase(): string {\n\t\treturn this._phrase;\n\t}\n\n\tset phrase(value: string) {\n\t\tthis._phrase = value;\n\t}\n\n\tget grayListed(): string[] {\n\t\treturn this._grayListed;\n\t}\n\n\tset grayListed(value: string[]) {\n\t\tthis._grayListed = value;\n\t}\n\n\tget blackListed(): string[] {\n\t\treturn this._blackListed;\n\t}\n\n\tset blackListed(value: string[]) {\n\t\tthis._blackListed = value;\n\t}\n\n\tget undefinedList(): string[] {\n\t\treturn this._undefinedList;\n\t}\n\n\tset undefinedList(value: string[]) {\n\t\tthis._undefinedList = value;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { HTTP_PATHS } from '../constants/http-paths.constant';\nimport { Observable, of } from 'rxjs';\nimport { RawScriptAnalysis, ScriptAnalysis } from '../models/script-analysis';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class ScriptAnalyzerHttpService {\n\tconstructor(private httpClient: HttpClient) {}\n\n\tpublic postScriptAnalysis(script: string): Observable<ScriptAnalysis> {\n\t\treturn this.httpClient.post<RawScriptAnalysis>(HTTP_PATHS.SCRIPT_ANALYSIS, script).pipe(\n\t\t\tcatchError((error: HttpErrorResponse) => {\n\t\t\t\treturn of(error);\n\t\t\t}),\n\t\t\tmap((response: RawScriptAnalysis | HttpErrorResponse) => {\n\t\t\t\tif (response instanceof HttpErrorResponse) {\n\t\t\t\t\treturn ScriptAnalysis.generateEmpty();\n\t\t\t\t} else {\n\t\t\t\t\treturn new ScriptAnalysis({\n\t\t\t\t\t\t...response,\n\t\t\t\t\t\tundefinedList: response.undefined,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class SubscriptionHandlerService {\n\tprivate subscriptionList: Subscription[] = [];\n\n\tconstructor() {}\n\n\tpublic addSubscription(subscription: Subscription): void {\n\t\tthis.subscriptionList.push(subscription);\n\t}\n\n\tpublic clearSubscriptions(): void {\n\t\tthis.subscriptionList.forEach((subscription: Subscription) => subscription.unsubscribe());\n\t}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n\tproduction: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n\tenableProdMode();\n}\n\nplatformBrowserDynamic()\n\t.bootstrapModule(AppModule)\n\t.catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}